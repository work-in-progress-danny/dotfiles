local leader = "<leader>"

return {
	"folke/which-key.nvim", -- Whichkey ( Keybinding Prompt on leader-key down )
	dependencies = { "echasnovski/mini.icons", version = false },
	event = "VeryLazy",
	opts = {
		preset = "helix",
		plugins = {
			presets = {
				operators = false, -- adds help for operators like d, y, ...
				motions = false, -- adds help for motions
				text_objects = false, -- help for text objects triggered after entering an operator
				windows = false, -- default bindings on <c-w>
				nav = false, -- misc bindings to work with windows
				z = false, -- bindings for folds, spelling and others prefixed with z
				g = false, -- bindings for prefixed with g
			},
		},
	},
	keys = {
		{
			leader .. "/",
			"<Plug>(comment_toggle_linewise_current)",
			desc = "Comment toggle current line",
			nowait = true,
			remap = false,
		},
		{ leader .. "=", Cmd("wincmd ="), desc = "Reset window distribution", nowait = true, remap = false },
		{
			leader .. "G",
			Cmd('lua require("telescope").extensions.live_grep_args.live_grep_args()'),
			desc = "Grep text",
			nowait = true,
			remap = false,
		},
		{
			leader .. "N",
			Cmd("lua vim.diagnostic.goto_prev({ border = 'rounded' })"),
			desc = "Jump to previous error",
			nowait = true,
			remap = false,
		},
		{
			leader .. "R",
			Cmd("Telescope resume"),
			desc = "Resume last Telescope instance",
			nowait = true,
			remap = false,
		},
		{ leader .. "T", group = "Telescope", nowait = true, remap = false },
		{
			leader .. "Tc",
			Cmd("Telescope command_history"),
			desc = "Command History",
			nowait = true,
			remap = false,
		},
		{ leader .. "Th", Cmd("Telescope help_tags"), desc = "Search Help Tags", nowait = true, remap = false },
		{ leader .. "Tt", Cmd("Telescope"), desc = "Toggle Telescope", nowait = true, remap = false },
		{
			leader .. "a",
			Cmd("lua vim.lsp.buf.code_action()"),
			desc = "Display code action",
			nowait = true,
			remap = false,
		},
		{ leader .. "b", Cmd("Telescope buffers"), desc = "Buffers", nowait = true, remap = false },
		{ leader .. "d", group = "Git diff", nowait = true, remap = false },
		{ leader .. "dc", Cmd("DiffviewClose"), desc = "close diff view", nowait = true, remap = false },
		{ leader .. "df", Cmd("Telescope git_status hidden=true"), desc = "files", nowait = true, remap = false },
		{ leader .. "do", Cmd("DiffviewOpen"), desc = "open diff view", nowait = true, remap = false },
		{ leader .. "dp", Cmd("diffput"), desc = "put diff back", nowait = true, remap = false },
		{ leader .. "e", Cmd("NvimTreeToggle"), desc = "Toggle nvim-tree", nowait = true, remap = false },
		{
			leader .. "f",
			Cmd("Telescope find_files hidden=true"),
			desc = "Find files",
			nowait = true,
			remap = false,
		},
		{ leader .. "g", group = "Get something", nowait = true, remap = false },
		{
			leader .. "g/",
			Cmd("Telescope current_buffer_fuzzy_find"),
			desc = "Search current buffer",
			nowait = true,
			remap = false,
		},
		{
			leader .. "gD",
			Cmd("lua vim.lsp.buf.declaration()"),
			desc = "Declaration",
			nowait = true,
			remap = false,
		},
		{ leader .. "gd", Cmd("lua vim.lsp.buf.definition()"), desc = "Definition", nowait = true, remap = false },
		{
			leader .. "gi",
			Cmd("lua vim.lsp.buf.implementation()"),
			desc = "Implementation",
			nowait = true,
			remap = false,
		},
		{
			leader .. "gr",
			Cmd("Telescope lsp_references"),
			desc = "All references in code base",
			nowait = true,
			remap = false,
		},
		{ leader .. "h", Cmd("noh"), desc = "Remove highlights", nowait = true, remap = false },
		{ leader .. "k", group = "signature help", nowait = true, remap = false },
		{ leader .. "kK", Cmd("lua vim.lsp.buf.hover()"), desc = "Show hover", nowait = true, remap = false },
		{
			leader .. "kh",
			Cmd("lua vim.lsp.buf.signature_help()"),
			desc = "Signature help",
			nowait = true,
			remap = false,
		},
		{
			leader .. "kk",
			Cmd("lua vim.diagnostic.open_float()"),
			desc = "Show diagnostics",
			nowait = true,
			remap = false,
		},
		{ leader .. "m", group = "Marks", nowait = true, remap = false },
		{
			leader .. "ma",
			Cmd('lua require("harpoon"):list():append()'),
			desc = "Add Mark",
			nowait = true,
			remap = false,
		},
		{ leader .. "mm", Cmd("Telescope harpoon marks"), desc = "Open Marks list", nowait = true, remap = false },
		{
			leader .. "mn",
			Cmd('lua require("harpoon"):list():next()'),
			desc = "Next Mark",
			nowait = true,
			remap = false,
		},
		{
			leader .. "mp",
			Cmd('lua require("harpoon"):list():prev()'),
			desc = "Previous Mark",
			nowait = true,
			remap = false,
		},
		{
			leader .. "mr",
			Cmd('lua require("harpoon"):list():remove()'),
			desc = "Remove Mark",
			nowait = true,
			remap = false,
		},
		{
			leader .. "n",
			Cmd("lua vim.diagnostic.goto_next({ border = 'rounded' })"),
			desc = "Jump to next error",
			nowait = true,
			remap = false,
		},
		{ leader .. "q", group = "Close", nowait = true, remap = false },
		{ leader .. "qQ", Cmd("Bdelete!"), desc = "Force close buffer", nowait = true, remap = false },
		{ leader .. "qb", Cmd("bd"), desc = "Close buffer", nowait = true, remap = false },
		{
			leader .. "qo",
			Cmd("BufferLineCloseOthers"),
			desc = "Close all other buffers",
			nowait = true,
			remap = false,
		},
		{ leader .. "qq", Cmd("Bdelete"), desc = "Close buffer", nowait = true, remap = false },
		{ leader .. "qv", Cmd("qall"), desc = "Quit nvim", nowait = true, remap = false },
		{
			leader .. "r",
			Cmd("lua vim.lsp.buf.rename()"),
			desc = "Rename all instances",
			nowait = true,
			remap = false,
		},
		{
			leader .. "s",
			Cmd("Telescope current_buffer_fuzzy_find"),
			desc = "Search current buffer",
			nowait = true,
			remap = false,
		},
		{ leader .. "t", Cmd("TroubleToggle"), desc = "Toggle Trouble buffer", nowait = true, remap = false },
		{ leader .. "w", Cmd("w!"), desc = "Force write buffer", nowait = true, remap = false },
		{ leader .. "z", Cmd("Telescope symbols"), desc = "z-emojis of course", nowait = true, remap = false },
		{
			leader .. "/",
			"<Plug>(comment_toggle_linewise_visual)",
			desc = "Comment toggle current highlight",
			mode = "x",
			nowait = true,
			remap = false,
		},
	},
}
